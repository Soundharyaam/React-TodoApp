{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","react_default","a","createElement","style","Link","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","borderBottom","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","disply","flex","placeholder","className","s","tyle","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","BrowserRouter","layout_Header","Route","exact","path","render","prop","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f9d71f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header(){\n    return (\n        <header style={headerStyle} >\n            <h1>TodoList</h1>\n            <Link style={linkStyle} to=\"/\">Home</Link> |  \n             <Link style={linkStyle} to=\"/about\">About</Link>\n        </header>\n    )\n}\n\nconst headerStyle={\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding:'10px'\n}\n\nconst linkStyle={\n    color:'#fff',\n    textDecoration:'none'\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n\n  getStyle =() =>{\n    return {\n      background: '#f4f4f4',\n      padding: '10px',\n      borderBottom: '1px #ccc dotted',\n      textDecoration: this.props.todo.completed? 'line-through':'none'\n    }\n  }\n\n\n  render() {\n    const {id, title} = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n        <input type=\"checkbox\" onChange={this.props.markComplete.bind (this,id)}/> {' '}\n        {title}\n        <button onClick={this.props.delTodo.bind(this,id)} style={btnStyle}>x</button>\n        </p>\n      </div>\n    )\n  }\n}\n\n//PropTypes\nTodoItem.propTypes={\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\nconst btnStyle={\n  background:'#ff0000',\n  color: '#fff',\n  border:'none',\n  padding:'5px 10px',\n  borderRadius: '50%',\n  cursor:'pointer',\n  float:'right'\n}\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\n\nclass Todos extends Component{\n\n    \n    render(){\n       \n        return this.props.todos.map((todo)=>(\n            <TodoItem key={todo.id} todo={ todo } markComplete={this.props.markComplete}\n            delTodo={this.props.delTodo}/>\n        ));\n    }\n}\n\n//PropTypes\nTodos.propTypes={\n    todos: PropTypes.array.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired,\n}\n\nexport default Todos;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component {\n\n    state={\n        title:''\n    }\n\n    onSubmit=(e)=>{\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({title:''});\n    }\n\n    onChange=(e)=>{\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{disply:'flex'}}>\n          <input type=\"text\" name=\"title\" style={{flex:'10',padding:'5px'}} \n          placeholder=\"Add Todo...\" value={this.state.title}\n          onChange={this.onChange}/>\n          <input type=\"submit\" value=\"Submit\" className=\"btn\" s\n          tyle={{flex:'1'}}/>\n      </form>\n    )\n  }\n}\n\n//PropTypes\nAddTodo.propTypes={\n    addTodo: PropTypes.func.isRequired,\n  }\n\n\nexport default AddTodo\n","import React from 'react'\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>This is the TodoList app v1.0.0. It is part of a \n          React crash course.</p>\n    </React.Fragment>\n  )\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n//import uuid from 'uuid';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state={\n    todos:[]\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res=>this.setState({todos:res.data}));\n  }\n\n\n  markComplete = (id) =>{\n    this.setState({todos: this.state.todos.map(todo=>{\n      if(todo.id === id) {\n        todo.completed=!todo.completed\n      }\n      return todo;\n    })\n  });\n  }\n\n  delTodo= (id) =>{\n    //console.log(id);\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res=>\n    this.setState({todos: [...this.state.todos.filter(todo=>todo.id!==id)]})\n    );\n\n  }\n\n  addTodo=(title)=>{\n    axios.post('https://jsonplaceholder.typicode.com/todos',{\n      title,\n      completed: false\n    }).then(res =>\n\n      this.setState({todos:[...this.state.todos, res.data]})\n\n    );\n    \n  }\n\n\n  render() {\n    //console.log(this.state.todos);\n    return (\n      <Router>\n      <div className=\"App\">\n      <div className=\"container\">\n       <Header/>\n       <Route exact path=\"/\" render={prop=>(\n         <React.Fragment>\n            <AddTodo addTodo={this.addTodo}/>\n            <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n         </React.Fragment>\n       )}/>\n       <Route path=\"/about\" component={About} />\n      </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}